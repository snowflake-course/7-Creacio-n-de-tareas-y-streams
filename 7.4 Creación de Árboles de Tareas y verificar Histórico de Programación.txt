USE TASK_DB;
 
SHOW TASKS;

SELECT * FROM CUSTOMERS;

// Preparar 2ª tabla
CREATE OR REPLACE TABLE CUSTOMERS2 (
    CUSTOMER_ID INT,
    FIRST_NAME VARCHAR(40),
    CREATE_DATE DATE)
    
    
// Suspender tarea "parent"
ALTER TASK CUSTOMER_INSERT SUSPEND;
    
// Crear tarea "child" CUSTOMER_INSERT2
CREATE OR REPLACE TASK CUSTOMER_INSERT2
    WAREHOUSE = COMPUTE_WH
    AFTER CUSTOMER_INSERT
    AS 
    INSERT INTO CUSTOMERS2 SELECT * FROM CUSTOMERS;
    
    
// Preparar 3ª tabla
CREATE OR REPLACE TABLE CUSTOMERS3 (
    CUSTOMER_ID INT,
    FIRST_NAME VARCHAR(40),
    CREATE_DATE DATE,
    INSERT_DATE DATE DEFAULT DATE(CURRENT_TIMESTAMP))    
    

// Crear tarea "child" CUSTOMER_INSERT3
CREATE OR REPLACE TASK CUSTOMER_INSERT3
    WAREHOUSE = COMPUTE_WH
    AFTER CUSTOMER_INSERT2
    AS 
    INSERT INTO CUSTOMERS3 (CUSTOMER_ID,FIRST_NAME,CREATE_DATE) SELECT * FROM CUSTOMERS2;


SHOW TASKS;

ALTER TASK CUSTOMER_INSERT 
SET SCHEDULE = '1 MINUTE'

ALTER TASK CUSTOMER_INSERT SUSPEND;
// Reactivar tareas (primero la tarea child)
ALTER TASK CUSTOMER_INSERT RESUME;
ALTER TASK CUSTOMER_INSERT2 RESUME;
ALTER TASK CUSTOMER_INSERT3 RESUME;


SELECT * FROM CUSTOMERS2

SELECT * FROM CUSTOMERS3

// Suspender tareas
ALTER TASK CUSTOMER_INSERT SUSPEND;
ALTER TASK CUSTOMER_INSERT2 SUSPEND;
ALTER TASK CUSTOMER_INSERT3 SUSPEND;


// Verificar histórico de tareas
SHOW TASKS;

// Usar función "TASK_HISTORY()"
select *
  from table(information_schema.task_history())
  order by scheduled_time desc;